{"version":3,"sources":["components/NavBar/index.js","components/Wrapper/index.js","components/ImageCard/index.js","App.js","index.js"],"names":["NavBar","props","className","children","currentScore","bestScore","roundsPlayed","clickCount","alert","Wrapper","ImageCard","imagesJSON","handlePlayerGuess","handleIncrement","map","myObj","data-id","id","key","onClick","event","alt","name","src","image","App","state","imagesGuessed","setState","handleDecrement","checkImageId","find","element","currentGuess","target","dataset","guessCheck","console","log","push","averageClicks","sort","Math","random","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e97ed18.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\"\n\nfunction NavBar(props) {\n    return (\n        <div className=\"jumbotron text-center\">\n            <h1>{props.children}</h1>\n            <p>Try to click all 12 images without clicking the same image twice</p>\n            <div className=\"current-score\">\n                <h3>Your Current Score is: {props.currentScore}</h3>\n            </div>\n            <div className=\"best-score\">\n                <h3>Your Best Score is: {props.bestScore}</h3>\n            </div>\n            <div className=\"rounds-played\">\n                <h3>Rounds Played: {props.roundsPlayed}</h3>\n            </div>\n            <div className=\"click-count\">\n            <h3>Click Count: {props.clickCount}</h3>\n            </div>\n            <div className=\"alert-div\">\n                <h3>{props.alert}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard({ imagesJSON, handlePlayerGuess, handleIncrement }) {\n    return (\n        <div className=\"row justify-content-center\">\n\n                {imagesJSON.map((myObj) => {\n                    return (\n                        <div className=\"card img-container justify-content-center col-3\" \n                        data-id={myObj.id} \n                        key={myObj.id}>\n                                <img \n                                onClick={(event) => handlePlayerGuess(event) && handleIncrement(event)}\n                                className=\"card-img\" \n                                data-id={myObj.id} \n                                key={myObj.id}\n                                alt={myObj.name} \n                                src={myObj.image} />\n                        </div>\n                    )\n                })}\n\n        </div>\n    );\n}\n\nexport default ImageCard;\n","import React, { Component } from 'react';\nimport './App.css';\nimport imagesJSON from \"./images.json\";\nimport NavBar from './components/NavBar';\nimport Wrapper from './components/Wrapper';\nimport ImageCard from './components/ImageCard/';\n\n// import './components/Footer';\n\n\nclass App extends Component {\n  state = {\n    clickCount: 0,\n    // images: images,\n    imagesJSON,\n    imagesGuessed: [],\n    currentScore: 0,\n    bestScore: 0,\n    alert: \"Click an image to begin\",\n    roundsPlayed: 0\n  }\n\n  ////\n  handleIncrement = () => {\n    this.setState({ clickCount: this.state.clickCount + 1 });\n  }\n  handleDecrement = () => {\n    this.setState({ clickCount: this.state.clickCount - 1 });\n  };\n  ////\n\n\n  ////\n  checkImageId = id => {\n    let checkImage = this.state.imagesGuessed.find(function (element) {\n      return element === id;\n    });\n    if (checkImage) {\n      return \"Incorrect\"\n    }\n    else {\n      return \"Correct\"\n    }\n  };\n  ////\n\n  ///\n  handlePlayerGuess = (event) => {\n    let clickCount = this.state.clickCount;\n    let currentGuess = event.target.dataset.id;\n    let guessCheck = this.checkImageId(currentGuess);\n    console.log(`Current Guess: ${currentGuess}`);\n    console.log(`Guess Chek: ${guessCheck}`);\n    let bestScore = this.state.bestScore;\n    let currentScore = this.state.currentScore;\n    let alert = this.state.alert;\n    let imagesGuessed = this.state.imagesGuessed;\n    let roundsPlayed = this.state.roundsPlayed;\n    if (guessCheck === \"Incorrect\") {\n      alert = \"You already clicked that image this round!\";\n      bestScore = currentScore > bestScore ? currentScore : bestScore;\n      currentScore = 0;\n      roundsPlayed++;\n      imagesGuessed = [];\n      console.log(`Current Score: ${currentScore}, Best Score: ${bestScore}`);\n      console.log(`Alert: ${alert}`);\n      console.log(`Images Guessed Already: ${imagesGuessed}`);\n    }\n    else {\n      alert = \"Correct, no matches yet this round!\";\n      imagesGuessed.push(currentGuess);\n      currentScore++;\n      bestScore = currentScore > bestScore ? currentScore : bestScore;\n      console.log(`Images Guessed Already: ${imagesGuessed}`);\n      console.log(`Alert: ${alert}`);\n      if (currentScore === 12) {\n        let averageClicks = (clickCount + 1) / (roundsPlayed + 1);\n        alert = (`You Win! it took you ${clickCount + 1} clicks and ${roundsPlayed + 1} rounds to Win\n        Your average is ${averageClicks} clicks per round`);\n      }\n    }\n    this.setState({\n      imagesJSON: this.state.imagesJSON.sort(() => Math.random() - 0.5),\n      alert: alert,\n      clickCount: clickCount + 1,\n      roundsPlayed: roundsPlayed,\n      currentScore: currentScore,\n      bestScore: bestScore,\n      imagesGuessed: imagesGuessed,\n    })\n  }\n\n  ////\n\n  render() {\n    return (\n      <div>\n        <Wrapper>\n          <NavBar\n            currentScore={this.state.currentScore}\n            bestScore={this.state.bestScore}\n            roundsPlayed={this.state.roundsPlayed}\n            clickCount={this.state.clickCount}\n            alert={this.state.alert}\n          >The `Don't Match` Memory Game!\n          </NavBar>\n          <ImageCard imagesJSON={this.state.imagesJSON}\n            handlePlayerGuess={this.handlePlayerGuess}\n            handleIncrement={this.handleIncrement}\n          />\n\n        </Wrapper>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}